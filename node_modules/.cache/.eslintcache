[{"/Users/emi.ochoa/maintpsjhu/src/index.js":"1","/Users/emi.ochoa/maintpsjhu/src/reportWebVitals.js":"2","/Users/emi.ochoa/maintpsjhu/src/App.js":"3","/Users/emi.ochoa/maintpsjhu/src/Home.js":"4","/Users/emi.ochoa/maintpsjhu/src/Header.js":"5"},{"size":535,"mtime":1676050534630,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1676050534633,"results":"8","hashOfConfig":"7"},{"size":570,"mtime":1676050534629,"results":"9","hashOfConfig":"7"},{"size":141,"mtime":1676050534630,"results":"10","hashOfConfig":"7"},{"size":4312,"mtime":1676050534630,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ef52ad",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/emi.ochoa/maintpsjhu/src/index.js",[],[],"/Users/emi.ochoa/maintpsjhu/src/reportWebVitals.js",[],[],"/Users/emi.ochoa/maintpsjhu/src/App.js",[],[],"/Users/emi.ochoa/maintpsjhu/src/Home.js",[],[],"/Users/emi.ochoa/maintpsjhu/src/Header.js",["28"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { ThemeProvider } from '@mui/material/styles';\n\nimport logo from './logo.png'; // Tell webpack this JS file uses this image\n\n\nconst pages = ['Home', 'Ancestry Tree', 'Archive', 'Events', 'About Us'];\n\nfunction ResponsiveAppBar({theme}) {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n\n  return (\n    <ThemeProvider theme={theme}>\n\n    <AppBar position=\"static\" style={{background: 'transparent', boxShadow: 'none'}}>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n\n          {/* <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} /> */}\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Home\">\n              <IconButton sx={{ p: 0 }} href=\"/\" >\n                <Avatar alt=\"TPS Logo\" src={logo} />\n              </IconButton>\n            </Tooltip>\n          </Box>\n\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 600,\n              color: '061E84',\n              textDecoration: 'none',\n            }}\n          >\n            TPS\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n                marginLeft: \"auto\",\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} \n                onClick={handleCloseNavMenu}\n                sx={{\n                    justifyContent: \"flex-end\",\n                    marginLeft: \"auto\",}}>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              color: \"061E84\",\n              textDecoration: 'none',\n            }}\n          >\n            TPS\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                variant=\"text\"\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: '061E84', display: 'block' }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n    </ThemeProvider>\n  );\n}\nexport default ResponsiveAppBar;",{"ruleId":"29","severity":1,"message":"30","line":12,"column":8,"nodeType":"31","messageId":"32","endLine":12,"endColumn":13},"no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar"]